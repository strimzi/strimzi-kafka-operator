[ ca ]
default_ca           = strimzi_ca_section

[ strimzi_ca_section ]
database             = ${ENV::STRIMZI_database}
new_certs_dir        = ${ENV::STRIMZI_new_certs_dir}
email_in_dn          = no
rand_serial          =
default_md           = sha512
policy               = policy_c_o_match
default_days         = 1
x509_extensions      = strimzi_x509_extensions

[ policy_c_o_match ]
# Issued cert's O is optional
organizationName     = optional
# Issued cert's CN must be supplied
commonName           = optional

[ strimzi_x509_extensions ]
subjectKeyIdentifier = hash
basicConstraints     = ${ENV::STRIMZI_basicConstraints}
keyUsage             = ${ENV::STRIMZI_keyUsage}

[ server_ext ]
basicConstraints     = critical,CA:false
extendedKeyUsage     = clientAuth,serverAuth
keyUsage             = critical,digitalSignature,keyEncipherment
subjectKeyIdentifier = hash

#[ client_ext ]
#basicConstraints     = critical,CA:false
#extendedKeyUsage     = clientAuth
#keyUsage             = critical,digitalSignature
#subjectKeyIdentifier = hash

[ req ]
# Used for renewSelfSignedCert() only
x509_extensions      = strimzi_x509_extensions
distinguished_name   = req_distinguished_name
prompt               = no
req_extensions       = v3_req

[ req_distinguished_name ]

[ v3_req ]
# Used for renewSelfSignedCert() only
# basicConstraints = critical,CA:true,pathlen:1 may be added programmatically
# "subjectAltName = @alt_names" may be added programmatically
# [alt_names] section may be added programmatically
# "authorityKeyIdentifier = keyid,issuer" may be added programmatically
