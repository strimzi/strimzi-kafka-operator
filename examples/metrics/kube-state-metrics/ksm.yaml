---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: strimzi-kube-state-metrics
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-kube-state-metrics
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources:
      - customresourcedefinitions
    verbs: ["list", "watch"]
  - apiGroups:
      - kafka.strimzi.io
    resources:
      - kafkatopics
      - kafkausers
    verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: strimzi-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-kube-state-metrics
subjects:
  - kind: ServiceAccount
    name: strimzi-kube-state-metrics
    namespace: myproject
---
apiVersion: v1
kind: Service
metadata:
  name: strimzi-kube-state-metrics
spec:
  type: "ClusterIP"
  ports:
    - name: "http"
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: strimzi-kube-state-metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: strimzi-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: strimzi-kube-state-metrics
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: strimzi-kube-state-metrics
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/instance: strimzi-kube-state-metrics
    spec:
      automountServiceAccountToken: true
      serviceAccountName: strimzi-kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: kube-state-metrics
          args:
            - --custom-resource-state-only=true
            - --port=8080
            - --custom-resource-state-config-file=/etc/customresourcestate/config.yaml
          volumeMounts:
            - name: strimzi-kube-state-metrics-config
              mountPath: /etc/customresourcestate
              readOnly: true
          imagePullPolicy: IfNotPresent
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.14.0
          ports:
            - containerPort: 8080
              name: "http"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      volumes:
        - name: strimzi-kube-state-metrics-config
          configMap:
            name: strimzi-kube-state-metrics-config
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: strimzi-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: strimzi-kube-state-metrics
spec:
  jobLabel: app.kubernetes.io/name
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: strimzi-kube-state-metrics
  endpoints:
    - port: http
