apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: source
  labels:
    strimzi.io/cluster: cluster-a
spec:
  replicas: 1
  roles:
    - controller
    - broker
  storage:
    type: jbod
    volumes:
      - id: 0
        type: persistent-claim
        size: 100Gi
        deleteClaim: false
        kraftMetadata: shared
---

apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: cluster-a
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  kafka:
    version: 4.0.0
    metadataVersion: 4.0-IV3
    listeners:
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: scram-sha-512
    authorization:
      type: simple
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      default.replication.factor: 1
      min.insync.replicas: 1
  entityOperator:
    topicOperator: {}
    userOperator: {}
---

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: target
  labels:
    strimzi.io/cluster: cluster-b
spec:
  replicas: 1
  roles:
    - controller
    - broker
  storage:
    type: jbod
    volumes:
      - id: 0
        type: persistent-claim
        size: 100Gi
        deleteClaim: false
        kraftMetadata: shared
---

apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: cluster-b
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  kafka:
    version: 4.0.0
    metadataVersion: 4.0-IV3
    listeners:
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: scram-sha-512
    authorization:
      type: simple
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      default.replication.factor: 1
      min.insync.replicas: 1
  entityOperator:
    topicOperator: {}
    userOperator: {}
---

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: cluster-a-user
  labels:
    strimzi.io/cluster: cluster-a
spec:
  authentication:
    type: scram-sha-512
  authorization:
    type: simple
    acls:
      # MirrorSourceConnector
      - resource: # Not needed if offset-syncs.topic.location=target
          type: topic
          name: mm2-offset-syncs.cluster-b.internal
        operations:
          - Create
          - DescribeConfigs
          - Read
          - Write
      - resource: # Needed for every topic which is mirrored
          type: topic
          name: "*"
        operations:
          - Read
          - DescribeConfigs
      # MirrorCheckpointConnector
      - resource:
          type: cluster
        operations:
          - Describe
      - resource: # Needed for every group for which offsets are synced
          type: group
          name: "*"
        operations:
          - Describe
      - resource: # Not needed if offset-syncs.topic.location=target
          type: topic
          name: mm2-offset-syncs.cluster-b.internal
        operations:
          - Read
---

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: cluster-b-user
  labels:
    strimzi.io/cluster: cluster-b
spec:
  authentication:
    type: scram-sha-512
  authorization:
    type: simple
    acls:
      # Underlying Kafka Connects internal topics used to store configuration, offsets or status
      - resource:
          type: group
          name: mirrormaker2-cluster
        operations:
          - Read
      - resource:
          type: topic
          name: mirrormaker2-cluster-configs
        operations:
          - Create
          - Describe
          - DescribeConfigs
          - Read
          - Write
      - resource:
          type: topic
          name: mirrormaker2-cluster-status
        operations:
          - Create
          - Describe
          - DescribeConfigs
          - Read
          - Write
      - resource:
          type: topic
          name: mirrormaker2-cluster-offsets
        operations:
          - Create
          - Describe
          - DescribeConfigs
          - Read
          - Write
      # MirrorSourceConnector
      - resource: # Needed for every topic which is mirrored
          type: topic
          name: "*"
        operations:
          - Create
          - Alter
          - AlterConfigs
          - Write
      # MirrorCheckpointConnector
      - resource:
          type: cluster
        operations:
          - Describe
      - resource:
          type: topic
          name: cluster-a.checkpoints.internal
        operations:
          - Create
          - Describe
          - Write
      - resource: # Needed for every group for which the offset is synced
          type: group
          name: "*"
        operations:
          - Read
          - Describe
      - resource: # Needed for every topic which is mirrored
          type: topic
          name: "*"
        operations:
          - Read
      # MirrorHeartbeatConnector => needed only if the connector is enabled
      # - resource:
      #     type: topic
      #     name: heartbeats
      #   operations:
      #     - Read
      #     - Create
      #     - Describe
      #     - Write
---

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaMirrorMaker2
metadata:
  name: my-mirror-maker-2
spec:
  version: 4.0.0
  replicas: 1
  connectCluster: "cluster-b" # Must be the target custer
  clusters:
    - alias: "cluster-a" # Source cluster
      bootstrapServers: cluster-a-kafka-bootstrap:9093
      tls:
        trustedCertificates:
          - secretName: cluster-a-cluster-ca-cert
            pattern: "*.crt"
      authentication:
        type: scram-sha-512
        username: cluster-a-user
        passwordSecret:
          secretName: cluster-a-user
          password: password
    - alias: "cluster-b" # Target cluster
      bootstrapServers: cluster-b-kafka-bootstrap:9093
      tls:
        trustedCertificates:
          - secretName: cluster-b-cluster-ca-cert
            pattern: "*.crt"
      authentication:
        type: scram-sha-512
        username: cluster-b-user
        passwordSecret:
          secretName: cluster-b-user
          password: password
      config:
        # -1 means it will use the default replication factor configured in the broker
        config.storage.replication.factor: -1
        offset.storage.replication.factor: -1
        status.storage.replication.factor: -1
  mirrors:
    - sourceCluster: "cluster-a"
      targetCluster: "cluster-b"
      sourceConnector:
        tasksMax: 1
        config:
          # -1 means it will use the default replication factor configured in the broker
          replication.factor: -1
          offset-syncs.topic.replication.factor: -1
          sync.topic.acls.enabled: "false"
          refresh.topics.interval.seconds: 600
          offset.lag.max: 100
      checkpointConnector:
        tasksMax: 1
        config:
          # -1 means it will use the default replication factor configured in the broker
          checkpoints.topic.replication.factor: -1
          sync.group.offsets.enabled: "true"
          emit.checkpoints.interval.seconds: 60
          sync.group.offsets.interval.seconds: 60
          refresh.groups.interval.seconds: 600
      topicsPattern: ".*"
      groupsPattern: ".*"
