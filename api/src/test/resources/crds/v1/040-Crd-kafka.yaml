apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: kafkas.kafka.strimzi.io
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
spec:
  group: kafka.strimzi.io
  names:
    kind: Kafka
    listKind: KafkaList
    singular: kafka
    plural: kafkas
    shortNames:
    - k
    categories:
    - strimzi
  scope: Namespaced
  conversion:
    strategy: None
  versions:
  - name: v1
    served: true
    storage: true
    subresources:
      status: {}
    additionalPrinterColumns:
    - name: Ready
      description: The state of the custom resource
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
      type: string
    - name: Metadata State
      description: The state of the cluster metadata
      jsonPath: .status.kafkaMetadataState
      type: string
    - name: Warnings
      description: Warnings related to the custom resource
      jsonPath: ".status.conditions[?(@.type==\"Warning\")].status"
      type: string
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
            description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          kind:
            type: string
            description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          metadata:
            type: object
          spec:
            type: object
            properties:
              kafka:
                type: object
                properties:
                  version:
                    type: string
                    description: The Kafka broker version. Defaults to the latest version. Consult the user documentation to understand the process required to upgrade or downgrade the version.
                  metadataVersion:
                    type: string
                    description: "The KRaft metadata version used by the Kafka cluster. This property is ignored when running in ZooKeeper mode. If the property is not set, it defaults to the metadata version that corresponds to the `version` property."
                  image:
                    type: string
                    description: "The container image used for Kafka pods. If the property is not set, the default Kafka image version is determined based on the `version` configuration. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration. Changing the Kafka image version does not automatically update the image versions for other components, such as Kafka Exporter. "
                  listeners:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          pattern: "^[a-z0-9]{1,11}$"
                          description: Name of the listener. The name will be used to identify the listener and the related Kubernetes objects. The name has to be unique within given a Kafka cluster. The name can consist of lowercase characters and numbers and be up to 11 characters long.
                        port:
                          type: integer
                          minimum: 9092
                          description: "Port number used by the listener inside Kafka. The port number has to be unique within a given Kafka cluster. Allowed port numbers are 9092 and higher with the exception of ports 9404 and 9999, which are already used for Prometheus and JMX. Depending on the listener type, the port number might not be the same as the port number that connects Kafka clients."
                        type:
                          type: string
                          enum:
                          - internal
                          - route
                          - loadbalancer
                          - nodeport
                          - ingress
                          - cluster-ip
                          description: "Type of the listener. The supported types are as follows: \n\n* `internal` type exposes Kafka internally only within the Kubernetes cluster.\n* `route` type uses OpenShift Routes to expose Kafka.\n* `loadbalancer` type uses LoadBalancer type services to expose Kafka.\n* `nodeport` type uses NodePort type services to expose Kafka.\n* `ingress` type uses Kubernetes Nginx Ingress to expose Kafka with TLS passthrough.\n* `cluster-ip` type uses a per-broker `ClusterIP` service.\n"
                        tls:
                          type: boolean
                          description: "Enables TLS encryption on the listener. This is a required property. For `route` and `ingress` type listeners, TLS encryption must be always enabled."
                        authentication:
                          type: object
                          properties:
                            listenerConfig:
                              x-kubernetes-preserve-unknown-fields: true
                              type: object
                              description: Configuration to be used for a specific listener. All values are prefixed with `listener.name.<listener_name>`.
                            sasl:
                              type: boolean
                              description: Enable or disable SASL on this listener.
                            type:
                              type: string
                              enum:
                              - tls
                              - scram-sha-512
                              - custom
                              description: "Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners. `custom` type allows for any authentication type to be used. As of Strimzi 0.49.0, `oauth` type is deprecated and will be removed in the `v1` API version. Please use `custom` type instead."
                          required:
                          - type
                          description: Authentication configuration for this listener.
                        configuration:
                          type: object
                          properties:
                            brokerCertChainAndKey:
                              type: object
                              properties:
                                secretName:
                                  type: string
                                  description: The name of the Secret containing the certificate.
                                certificate:
                                  type: string
                                  description: The name of the file certificate in the Secret.
                                key:
                                  type: string
                                  description: The name of the private key in the Secret.
                              required:
                              - secretName
                              - certificate
                              - key
                              description: Reference to the `Secret` which holds the certificate and private key pair which will be used for this listener. The certificate can optionally contain the whole chain. This field can be used only with listeners with enabled TLS encryption.
                            class:
                              type: string
                              description: |-
                                Configures a specific class for `Ingress` and `LoadBalancer` that defines which controller is used. If not specified, the default controller is used.

                                * For an `ingress` listener, the operator uses this property to set the `ingressClassName` property in the `Ingress` resources.
                                * For a `loadbalancer` listener, the operator uses this property to set the `loadBalancerClass` property  in the `Service` resources.

                                For `ingress` and `loadbalancer` listeners only.
                            externalTrafficPolicy:
                              type: string
                              enum:
                              - Local
                              - Cluster
                              description: |-
                                Specifies whether the service routes external traffic to cluster-wide or node-local endpoints:

                                * `Cluster` may cause a second hop to another node and obscures the client source IP.
                                * `Local` avoids a second hop for `LoadBalancer` and `Nodeport` type services and preserves the client source IP (when supported by the infrastructure).

                                If unspecified, Kubernetes uses `Cluster` as the default. For `loadbalancer` or `nodeport` listeners only.
                            loadBalancerSourceRanges:
                              type: array
                              items:
                                type: string
                              description: "A list of CIDR ranges (for example `10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to loadbalancer listeners. If supported by the platform, traffic through the loadbalancer is restricted to the specified CIDR ranges. This field is applicable only for loadbalancer type services and is ignored if the cloud provider does not support the feature. For `loadbalancer` listeners only."
                            bootstrap:
                              type: object
                              properties:
                                alternativeNames:
                                  type: array
                                  items:
                                    type: string
                                  description: Additional alternative names for the bootstrap service. The alternative names will be added to the list of subject alternative names of the TLS certificates.
                                host:
                                  type: string
                                  description: Specifies the hostname used for the bootstrap resource. For `route` (optional) or `ingress` (required) listeners only. Ensure the hostname resolves to the Ingress endpoints; no validation is performed by Strimzi.
                                nodePort:
                                  type: integer
                                  description: Node port for the bootstrap service. For `nodeport` listeners only.
                                loadBalancerIP:
                                  type: string
                                  description: The loadbalancer is requested with the IP address specified in this property. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This property is ignored if the cloud provider does not support the feature. For `loadbalancer` listeners only.
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                  description: "Annotations added to `Ingress`, `Route`, or `Service` resources. You can use this property to configure DNS providers such as External DNS. For `loadbalancer`, `nodeport`, `route`, or `ingress` listeners only."
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                  description: "Labels added to `Ingress`, `Route`, or `Service` resources. For `loadbalancer`, `nodeport`, `route`, or `ingress` listeners only."
                                externalIPs:
                                  type: array
                                  items:
                                    type: string
                                  description: External IPs associated to the nodeport service. These IPs are used by clients external to the Kubernetes cluster to access the Kafka brokers. This property is helpful when `nodeport` without `externalIP` is not sufficient. For example on bare-metal Kubernetes clusters that do not support Loadbalancer service types. For `nodeport` listeners only.
                              description: Bootstrap configuration.
                            brokers:
                              type: array
                              items:
                                type: object
                                properties:
                                  broker:
                                    type: integer
                                    description: ID of the kafka broker (broker identifier). Broker IDs start from 0 and correspond to the number of broker replicas.
                                  advertisedHost:
                                    type: string
                                    description: The host name used in the brokers' `advertised.listeners`.
                                  advertisedPort:
                                    type: integer
                                    description: The port number used in the brokers' `advertised.listeners`.
                                  host:
                                    type: string
                                    description: The broker host. This field will be used in the Ingress resource or in the Route resource to specify the desired hostname. This field can be used only with `route` (optional) or `ingress` (required) type listeners.
                                  nodePort:
                                    type: integer
                                    description: Node port for the per-broker service. This field can be used only with `nodeport` type listener.
                                  loadBalancerIP:
                                    type: string
                                    description: The loadbalancer is requested with the IP address specified in this field. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This field is ignored if the cloud provider does not support the feature.This field can be used only with `loadbalancer` type listener.
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                    description: "Annotations that will be added to the `Ingress` or `Service` resource. You can use this field to configure DNS providers such as External DNS. This field can be used only with `loadbalancer`, `nodeport`, or `ingress` type listeners."
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                    description: "Labels that will be added to the `Ingress`, `Route`, or `Service` resource. This field can be used only with `loadbalancer`, `nodeport`, `route`, or `ingress` type listeners."
                                  externalIPs:
                                    type: array
                                    items:
                                      type: string
                                    description: External IPs associated to the nodeport service. These IPs are used by clients external to the Kubernetes cluster to access the Kafka brokers. This field is helpful when `nodeport` without `externalIP` is not sufficient. For example on bare-metal Kubernetes clusters that do not support Loadbalancer service types. This field can only be used with `nodeport` type listener.
                                required:
                                - broker
                              description: Per-broker configurations.
                            ipFamilyPolicy:
                              type: string
                              enum:
                              - SingleStack
                              - PreferDualStack
                              - RequireDualStack
                              description: |-
                                Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`:

                                * `SingleStack` is for a single IP family.
                                * `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters.
                                * `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters.

                                If unspecified, Kubernetes will choose the default value based on the service type.
                            ipFamilies:
                              type: array
                              items:
                                type: string
                                enum:
                                - IPv4
                                - IPv6
                              description: "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting."
                            createBootstrapService:
                              type: boolean
                              description: Whether to create the bootstrap service or not. The bootstrap service is created by default (if not specified differently). This field can be used with the `loadbalancer` listener.
                            finalizers:
                              type: array
                              items:
                                type: string
                              description: "A list of finalizers configured for the `LoadBalancer` type services created for this listener. If supported by the platform, the finalizer `service.kubernetes.io/load-balancer-cleanup` to make sure that the external load balancer is deleted together with the service.For more information, see https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#garbage-collecting-load-balancers. For `loadbalancer` listeners only."
                            useServiceDnsDomain:
                              type: boolean
                              description: |-
                                Configures whether the Kubernetes service DNS domain should be included in the generated addresses.

                                * If set to `false`, the generated addresses do not contain the service DNS domain suffix. For example, `my-cluster-kafka-0.my-cluster-kafka-brokers.myproject.svc`.
                                * If set to `true`, the generated addresses contain the service DNS domain suffix. For example, `my-cluster-kafka-0.my-cluster-kafka-brokers.myproject.svc.cluster.local`.

                                The default is `.cluster.local`, but this is customizable using the environment variable `KUBERNETES_SERVICE_DNS_DOMAIN`. For `internal` and `cluster-ip` listeners only.
                            maxConnections:
                              type: integer
                              description: The maximum number of connections we allow for this listener in the broker at any time. New connections are blocked if the limit is reached.
                            maxConnectionCreationRate:
                              type: integer
                              description: The maximum connection creation rate we allow in this listener at any time. New connections will be throttled if the limit is reached.
                            preferredNodePortAddressType:
                              type: string
                              enum:
                              - ExternalIP
                              - ExternalDNS
                              - InternalIP
                              - InternalDNS
                              - Hostname
                              description: |-
                                Defines which address type should be used as the node address. Available types are: `ExternalDNS`, `ExternalIP`, `InternalDNS`, `InternalIP` and `Hostname`. By default, the addresses are used in the following order (the first one found is used):

                                * `ExternalDNS`
                                * `ExternalIP`
                                * `InternalDNS`
                                * `InternalIP`
                                * `Hostname`

                                This property is used to select the preferred address type, which is checked first. If no address is found for this address type, the other types are checked in the default order.For `nodeport` listeners only.
                            publishNotReadyAddresses:
                              type: boolean
                              description: Configures whether the service endpoints are considered "ready" even if the Pods themselves are not. Defaults to `false`. This field can not be used with `internal` listeners.
                            hostTemplate:
                              type: string
                              description: "Configures the template for generating the hostnames of the individual brokers. Valid placeholders that you can use in the template are `{nodeId}` and `{nodePodName}`."
                            advertisedHostTemplate:
                              type: string
                              description: "Configures the template for generating the advertised hostnames of the individual brokers. Valid placeholders that you can use in the template are `{nodeId}` and `{nodePodName}`."
                            allocateLoadBalancerNodePorts:
                              type: boolean
                              description: |-
                                Configures whether to allocate NodePort automatically for the `Service` with type `LoadBalancer`.
                                This is a one to one with the `spec.allocateLoadBalancerNodePorts` configuration in the `Service` type
                                For `loadbalancer` listeners only.
                          description: Additional listener configuration.
                        networkPolicyPeers:
                          type: array
                          items:
                            type: object
                            properties:
                              ipBlock:
                                type: object
                                properties:
                                  cidr:
                                    type: string
                                  except:
                                    type: array
                                    items:
                                      type: string
                              namespaceSelector:
                                type: object
                                properties:
                                  matchExpressions:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          type: array
                                          items:
                                            type: string
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                              podSelector:
                                type: object
                                properties:
                                  matchExpressions:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          type: array
                                          items:
                                            type: string
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                          description: "List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list."
                      required:
                      - name
                      - port
                      - type
                      - tls
                    description: Configures listeners to provide access to Kafka brokers.
                  config:
                    x-kubernetes-preserve-unknown-fields: true
                    type: object
                    description: "Kafka broker config properties with the following prefixes cannot be set: listeners, advertised., broker., listener., host.name, port, inter.broker.listener.name, sasl., ssl., security., password., log.dir, zookeeper.connect, zookeeper.set.acl, zookeeper.ssl, zookeeper.clientCnxnSocket, authorizer., super.user, cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers, node.id, process.roles, controller., metadata.log.dir, zookeeper.metadata.migration.enable, client.quota.callback.static.kafka.admin., client.quota.callback.static.produce, client.quota.callback.static.fetch, client.quota.callback.static.storage.per.volume.limit.min.available., client.quota.callback.static.excluded.principal.name.list, prometheus.metrics.reporter. (with the exception of: zookeeper.connection.timeout.ms, sasl.server.max.receive.size, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, ssl.secure.random.implementation, cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms, cruise.control.metrics.topic.auto.create.retries, cruise.control.metrics.topic.auto.create.timeout.ms, cruise.control.metrics.topic.min.insync.replicas, broker.session.timeout.ms, broker.heartbeat.interval.ms, controller.socket.timeout.ms, controller.quorum.election.backoff.max.ms, controller.quorum.election.timeout.ms, controller.quorum.fetch.timeout.ms)."
                  authorization:
                    type: object
                    properties:
                      authorizerClass:
                        type: string
                        description: "Authorization implementation class, which must be available in classpath."
                      superUsers:
                        type: array
                        items:
                          type: string
                        description: "List of super users, which are user principals with unlimited access rights."
                      supportsAdminApi:
                        type: boolean
                        description: Indicates whether the custom authorizer supports the APIs for managing ACLs using the Kafka Admin API. Defaults to `false`.
                      type:
                        type: string
                        enum:
                        - simple
                        - custom
                        description: "Authorization type. Currently, the supported types are `simple`, `keycloak`, `opa` and `custom`. `simple` authorization type uses Kafka's built-in authorizer for authorization. `keycloak` authorization type uses Keycloak Authorization Services for authorization. `opa` authorization type uses Open Policy Agent based authorization. `custom` authorization type uses user-provided implementation for authorization. `opa` (as of Strimzi 0.46.0) and `keycloak` (as of Strimzi 0.49.0) types are deprecated and will be removed in the `v1` API version. Please use `custom` type instead."
                    required:
                    - type
                    description: Authorization configuration for Kafka brokers.
                  rack:
                    type: object
                    properties:
                      topologyKey:
                        type: string
                        example: topology.kubernetes.io/zone
                        description: "A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set a broker's `broker.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2."
                    required:
                    - topologyKey
                    description: Configuration of the `broker.rack` broker config.
                  brokerRackInitImage:
                    type: string
                    description: The image of the init container used for initializing the `broker.rack`.
                  livenessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                    description: Pod liveness checking.
                  readinessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                    description: Pod readiness checking.
                  jvmOptions:
                    type: object
                    properties:
                      "-XX":
                        additionalProperties:
                          type: string
                        type: object
                        description: A map of -XX options to the JVM.
                      "-Xmx":
                        type: string
                        pattern: "^[0-9]+[mMgG]?$"
                        description: -Xmx option to to the JVM.
                      "-Xms":
                        type: string
                        pattern: "^[0-9]+[mMgG]?$"
                        description: -Xms option to to the JVM.
                      gcLoggingEnabled:
                        type: boolean
                        description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                      javaSystemProperties:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The system property name.
                            value:
                              type: string
                              description: The system property value.
                        description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                    description: JVM Options for pods.
                  jmxOptions:
                    type: object
                    properties:
                      authentication:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                            - password
                            description: Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
                        required:
                        - type
                        description: Authentication configuration for connecting to the JMX port.
                    description: JMX Options for Kafka brokers.
                  metricsConfig:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                        - jmxPrometheusExporter
                        - strimziMetricsReporter
                        description: Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.
                      valueFrom:
                        type: object
                        properties:
                          configMapKeyRef:
                            type: object
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            description: Reference to the key in the ConfigMap containing the configuration.
                        description: ConfigMap entry where the Prometheus JMX Exporter configuration is stored.
                      values:
                        type: object
                        properties:
                          allowList:
                            type: array
                            items:
                              type: string
                            description: A list of regex patterns to filter the metrics to collect. Should contain at least one element.
                        description: Configuration values for the Strimzi Metrics Reporter.
                    required:
                    - type
                    description: Metrics configuration.
                    x-kubernetes-validations:
                    - rule: self.type != 'jmxPrometheusExporter' || has(self.valueFrom)
                      message: valueFrom property is required
                  logging:
                    type: object
                    properties:
                      loggers:
                        additionalProperties:
                          type: string
                        type: object
                        description: A Map from logger name to logger level.
                      type:
                        type: string
                        enum:
                        - inline
                        - external
                        description: "Logging type, must be either 'inline' or 'external'."
                      valueFrom:
                        type: object
                        properties:
                          configMapKeyRef:
                            type: object
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            description: Reference to the key in the ConfigMap containing the configuration.
                        description: '`ConfigMap` entry where the logging configuration is stored. '
                    required:
                    - type
                    description: Logging configuration for Kafka.
                  template:
                    type: object
                    properties:
                      pod:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                          imagePullSecrets:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                            description: "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored."
                          securityContext:
                            type: object
                            properties:
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              fsGroup:
                                type: integer
                              fsGroupChangePolicy:
                                type: string
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxChangePolicy:
                                type: string
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              supplementalGroups:
                                type: array
                                items:
                                  type: integer
                              supplementalGroupsPolicy:
                                type: string
                              sysctls:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Configures pod-level security attributes and common container settings.
                          terminationGracePeriodSeconds:
                            type: integer
                            minimum: 0
                            description: "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds."
                          affinity:
                            type: object
                            properties:
                              nodeAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        preference:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: object
                                    properties:
                                      nodeSelectorTerms:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                              podAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                              podAntiAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                            description: The pod's affinity rules.
                          tolerations:
                            type: array
                            items:
                              type: object
                              properties:
                                effect:
                                  type: string
                                key:
                                  type: string
                                operator:
                                  type: string
                                tolerationSeconds:
                                  type: integer
                                value:
                                  type: string
                            description: The pod's tolerations.
                          topologySpreadConstraints:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                matchLabelKeys:
                                  type: array
                                  items:
                                    type: string
                                maxSkew:
                                  type: integer
                                minDomains:
                                  type: integer
                                nodeAffinityPolicy:
                                  type: string
                                nodeTaintsPolicy:
                                  type: string
                                topologyKey:
                                  type: string
                                whenUnsatisfiable:
                                  type: string
                            description: The pod's topology spread constraints.
                          priorityClassName:
                            type: string
                            description: 'The name of the priority class used to assign priority to the pods. '
                          schedulerName:
                            type: string
                            description: "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used."
                          hostAliases:
                            type: array
                            items:
                              type: object
                              properties:
                                hostnames:
                                  type: array
                                  items:
                                    type: string
                                ip:
                                  type: string
                            description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          dnsPolicy:
                            type: string
                            enum:
                            - ClusterFirst
                            - ClusterFirstWithHostNet
                            - Default
                            - None
                            description: "The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`."
                          dnsConfig:
                            type: object
                            properties:
                              nameservers:
                                type: array
                                items:
                                  type: string
                              options:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              searches:
                                type: array
                                items:
                                  type: string
                            description: "The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy."
                          enableServiceLinks:
                            type: boolean
                            description: Indicates whether information about services should be injected into Pod's environment variables.
                          tmpDirSizeLimit:
                            type: string
                            pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                            description: "Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources."
                          volumes:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Name to use for the volume. Required.
                                secret:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    optional:
                                      type: boolean
                                    secretName:
                                      type: string
                                  description: '`Secret` to use to populate the volume.'
                                configMap:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  description: '`ConfigMap` to use to populate the volume.'
                                emptyDir:
                                  type: object
                                  properties:
                                    medium:
                                      type: string
                                      enum:
                                      - Memory
                                      description: Medium represents the type of storage medium should back this volume. Valid values are unset or `Memory`.
                                    sizeLimit:
                                      type: string
                                      pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                                      description: The total amount of local storage required for this EmptyDir volume (for example 1Gi).
                                  description: '`EmptyDir` to use to populate the volume.'
                                persistentVolumeClaim:
                                  type: object
                                  properties:
                                    claimName:
                                      type: string
                                    readOnly:
                                      type: boolean
                                  description: '`PersistentVolumeClaim` object to use to populate the volume.'
                                csi:
                                  type: object
                                  properties:
                                    driver:
                                      type: string
                                    fsType:
                                      type: string
                                    nodePublishSecretRef:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                    readOnly:
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  description: '`CSIVolumeSource` object to use to populate the volume.'
                                image:
                                  type: object
                                  properties:
                                    pullPolicy:
                                      type: string
                                    reference:
                                      type: string
                                  description: '`ImageVolumeSource` object to use to populate the volume.'
                              oneOf:
                              - properties:
                                  secret: {}
                                  configMap: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  csi: {}
                                  image: {}
                            description: Additional volumes that can be mounted to the pod.
                        description: Template for Kafka `Pods`.
                      bootstrapService:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                          ipFamilyPolicy:
                            type: string
                            enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                            description: "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type."
                          ipFamilies:
                            type: array
                            items:
                              type: string
                              enum:
                              - IPv4
                              - IPv6
                            description: "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting."
                        description: Template for Kafka bootstrap `Service`.
                      brokersService:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                          ipFamilyPolicy:
                            type: string
                            enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                            description: "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type."
                          ipFamilies:
                            type: array
                            items:
                              type: string
                              enum:
                              - IPv4
                              - IPv6
                            description: "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting."
                        description: Template for Kafka broker `Service`.
                      externalBootstrapService:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for Kafka external bootstrap `Service`.
                      perPodService:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for Kafka per-pod `Services` used for access from outside of Kubernetes.
                      externalBootstrapRoute:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for Kafka external bootstrap `Route`.
                      perPodRoute:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for Kafka per-pod `Routes` used for access from outside of OpenShift.
                      externalBootstrapIngress:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for Kafka external bootstrap `Ingress`.
                      perPodIngress:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for Kafka per-pod `Ingress` used for access from outside of Kubernetes.
                      persistentVolumeClaim:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for all Kafka `PersistentVolumeClaims`.
                      podDisruptionBudget:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          maxUnavailable:
                            type: integer
                            minimum: 0
                            description: "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1."
                        description: Template for Kafka `PodDisruptionBudget`.
                      kafkaContainer:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secret.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a config map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be applied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should be applied to the container.
                        description: Template for the Kafka broker container.
                      initContainer:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secret.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a config map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be applied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should be applied to the container.
                        description: Template for the Kafka init container.
                      clusterCaCert:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for Secret with Kafka Cluster certificate public key.
                      serviceAccount:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for the Kafka service account.
                      jmxSecret:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for Secret of the Kafka Cluster JMX authentication.
                      clusterRoleBinding:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for the Kafka ClusterRoleBinding.
                      podSet:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for Kafka `StrimziPodSet` resource.
                    description: Template for Kafka cluster resources. The template allows users to specify how the Kubernetes resources are generated.
                  tieredStorage:
                    type: object
                    properties:
                      remoteStorageManager:
                        type: object
                        properties:
                          className:
                            type: string
                            description: The class name for the `RemoteStorageManager` implementation.
                          classPath:
                            type: string
                            description: The class path for the `RemoteStorageManager` implementation.
                          config:
                            additionalProperties:
                              type: string
                            type: object
                            description: "The additional configuration map for the `RemoteStorageManager` implementation. Keys will be automatically prefixed with `rsm.config.`, and added to Kafka broker configuration."
                        description: Configuration for the Remote Storage Manager.
                      type:
                        type: string
                        enum:
                        - custom
                        description: "Storage type, only 'custom' is supported at the moment."
                    required:
                    - type
                    description: Configure the tiered storage feature for Kafka brokers.
                  quotas:
                    type: object
                    properties:
                      consumerByteRate:
                        type: integer
                        minimum: 0
                        description: "A per-broker byte-rate quota for clients consuming from a broker, independent of their number. If clients consume at maximum speed, the quota is shared equally between all non-excluded consumers. Otherwise, the quota is divided based on each client's consumption rate."
                      controllerMutationRate:
                        type: number
                        minimum: 0
                        description: "The default client quota on the rate at which mutations are accepted per second for create topic requests, create partition requests, and delete topic requests, defined for each broker. The mutations rate is measured by the number of partitions created or deleted. Applied on a per-broker basis."
                      excludedPrincipals:
                        type: array
                        items:
                          type: string
                        description: "List of principals that are excluded from the quota. The principals have to be prefixed with `User:`, for example `User:my-user;User:CN=my-other-user`."
                      minAvailableBytesPerVolume:
                        type: integer
                        minimum: 0
                        description: Stop message production if the available size (in bytes) of the storage is lower than or equal to this specified value. This condition is mutually exclusive with `minAvailableRatioPerVolume`.
                      minAvailableRatioPerVolume:
                        type: number
                        minimum: 0
                        maximum: 1
                        description: Stop message production if the percentage of available storage space falls below or equals the specified ratio (set as a decimal representing a percentage). This condition is mutually exclusive with `minAvailableBytesPerVolume`.
                      producerByteRate:
                        type: integer
                        minimum: 0
                        description: "A per-broker byte-rate quota for clients producing to a broker, independent of their number. If clients produce at maximum speed, the quota is shared equally between all non-excluded producers. Otherwise, the quota is divided based on each client's production rate."
                      requestPercentage:
                        type: integer
                        minimum: 0
                        description: The default client quota limits the maximum CPU utilization of each client as a percentage of the network and I/O threads of each broker. Applied on a per-broker basis.
                      type:
                        type: string
                        enum:
                        - kafka
                        - strimzi
                        description: "Quotas plugin type. Currently, the supported types are `kafka` and `strimzi`. `kafka` quotas type uses Kafka's built-in quotas plugin. `strimzi` quotas type uses Strimzi quotas plugin."
                    required:
                    - type
                    description: "Quotas plugin configuration for Kafka brokers allows setting quotas for disk usage, produce/fetch rates, and more. Supported plugin types include `kafka` (default) and `strimzi`. If not specified, the default `kafka` quotas plugin is used."
                required:
                - listeners
                description: Configuration of the Kafka cluster.
              entityOperator:
                type: object
                properties:
                  topicOperator:
                    type: object
                    properties:
                      watchedNamespace:
                        type: string
                        description: The namespace the Topic Operator should watch.
                      image:
                        type: string
                        description: The image to use for the Topic Operator.
                      reconciliationIntervalMs:
                        type: integer
                        minimum: 0
                        description: Interval between periodic reconciliations in milliseconds.
                      startupProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                        description: Pod startup checking.
                      livenessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                        description: Pod liveness checking.
                      readinessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                        description: Pod readiness checking.
                      resources:
                        type: object
                        properties:
                          claims:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                request:
                                  type: string
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                        description: CPU and memory resources to reserve.
                      logging:
                        type: object
                        properties:
                          loggers:
                            additionalProperties:
                              type: string
                            type: object
                            description: A Map from logger name to logger level.
                          type:
                            type: string
                            enum:
                            - inline
                            - external
                            description: "Logging type, must be either 'inline' or 'external'."
                          valueFrom:
                            type: object
                            properties:
                              configMapKeyRef:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                description: Reference to the key in the ConfigMap containing the configuration.
                            description: '`ConfigMap` entry where the logging configuration is stored. '
                        required:
                        - type
                        description: Logging configuration.
                      jvmOptions:
                        type: object
                        properties:
                          "-XX":
                            additionalProperties:
                              type: string
                            type: object
                            description: A map of -XX options to the JVM.
                          "-Xmx":
                            type: string
                            pattern: "^[0-9]+[mMgG]?$"
                            description: -Xmx option to to the JVM.
                          "-Xms":
                            type: string
                            pattern: "^[0-9]+[mMgG]?$"
                            description: -Xms option to to the JVM.
                          gcLoggingEnabled:
                            type: boolean
                            description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                          javaSystemProperties:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The system property name.
                                value:
                                  type: string
                                  description: The system property value.
                            description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                        description: JVM Options for pods.
                    description: Configuration of the Topic Operator.
                  userOperator:
                    type: object
                    properties:
                      watchedNamespace:
                        type: string
                        description: The namespace the User Operator should watch.
                      image:
                        type: string
                        description: The image to use for the User Operator.
                      reconciliationIntervalMs:
                        type: integer
                        minimum: 0
                        description: Interval between periodic reconciliations in milliseconds.
                      secretPrefix:
                        type: string
                        description: The prefix that will be added to the KafkaUser name to be used as the Secret name.
                      livenessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                        description: Pod liveness checking.
                      readinessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                        description: Pod readiness checking.
                      resources:
                        type: object
                        properties:
                          claims:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                request:
                                  type: string
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                        description: CPU and memory resources to reserve.
                      logging:
                        type: object
                        properties:
                          loggers:
                            additionalProperties:
                              type: string
                            type: object
                            description: A Map from logger name to logger level.
                          type:
                            type: string
                            enum:
                            - inline
                            - external
                            description: "Logging type, must be either 'inline' or 'external'."
                          valueFrom:
                            type: object
                            properties:
                              configMapKeyRef:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                description: Reference to the key in the ConfigMap containing the configuration.
                            description: '`ConfigMap` entry where the logging configuration is stored. '
                        required:
                        - type
                        description: Logging configuration.
                      jvmOptions:
                        type: object
                        properties:
                          "-XX":
                            additionalProperties:
                              type: string
                            type: object
                            description: A map of -XX options to the JVM.
                          "-Xmx":
                            type: string
                            pattern: "^[0-9]+[mMgG]?$"
                            description: -Xmx option to to the JVM.
                          "-Xms":
                            type: string
                            pattern: "^[0-9]+[mMgG]?$"
                            description: -Xms option to to the JVM.
                          gcLoggingEnabled:
                            type: boolean
                            description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                          javaSystemProperties:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The system property name.
                                value:
                                  type: string
                                  description: The system property value.
                            description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                        description: JVM Options for pods.
                    description: Configuration of the User Operator.
                  template:
                    type: object
                    properties:
                      deployment:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                          deploymentStrategy:
                            type: string
                            enum:
                            - RollingUpdate
                            - Recreate
                            description: Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                        description: Template for Entity Operator `Deployment`.
                      pod:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                          imagePullSecrets:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                            description: "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored."
                          securityContext:
                            type: object
                            properties:
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              fsGroup:
                                type: integer
                              fsGroupChangePolicy:
                                type: string
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxChangePolicy:
                                type: string
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              supplementalGroups:
                                type: array
                                items:
                                  type: integer
                              supplementalGroupsPolicy:
                                type: string
                              sysctls:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Configures pod-level security attributes and common container settings.
                          terminationGracePeriodSeconds:
                            type: integer
                            minimum: 0
                            description: "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds."
                          affinity:
                            type: object
                            properties:
                              nodeAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        preference:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: object
                                    properties:
                                      nodeSelectorTerms:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                              podAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                              podAntiAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                            description: The pod's affinity rules.
                          tolerations:
                            type: array
                            items:
                              type: object
                              properties:
                                effect:
                                  type: string
                                key:
                                  type: string
                                operator:
                                  type: string
                                tolerationSeconds:
                                  type: integer
                                value:
                                  type: string
                            description: The pod's tolerations.
                          topologySpreadConstraints:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                matchLabelKeys:
                                  type: array
                                  items:
                                    type: string
                                maxSkew:
                                  type: integer
                                minDomains:
                                  type: integer
                                nodeAffinityPolicy:
                                  type: string
                                nodeTaintsPolicy:
                                  type: string
                                topologyKey:
                                  type: string
                                whenUnsatisfiable:
                                  type: string
                            description: The pod's topology spread constraints.
                          priorityClassName:
                            type: string
                            description: 'The name of the priority class used to assign priority to the pods. '
                          schedulerName:
                            type: string
                            description: "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used."
                          hostAliases:
                            type: array
                            items:
                              type: object
                              properties:
                                hostnames:
                                  type: array
                                  items:
                                    type: string
                                ip:
                                  type: string
                            description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          dnsPolicy:
                            type: string
                            enum:
                            - ClusterFirst
                            - ClusterFirstWithHostNet
                            - Default
                            - None
                            description: "The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`."
                          dnsConfig:
                            type: object
                            properties:
                              nameservers:
                                type: array
                                items:
                                  type: string
                              options:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              searches:
                                type: array
                                items:
                                  type: string
                            description: "The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy."
                          enableServiceLinks:
                            type: boolean
                            description: Indicates whether information about services should be injected into Pod's environment variables.
                          tmpDirSizeLimit:
                            type: string
                            pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                            description: "Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources."
                          volumes:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Name to use for the volume. Required.
                                secret:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    optional:
                                      type: boolean
                                    secretName:
                                      type: string
                                  description: '`Secret` to use to populate the volume.'
                                configMap:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  description: '`ConfigMap` to use to populate the volume.'
                                emptyDir:
                                  type: object
                                  properties:
                                    medium:
                                      type: string
                                      enum:
                                      - Memory
                                      description: Medium represents the type of storage medium should back this volume. Valid values are unset or `Memory`.
                                    sizeLimit:
                                      type: string
                                      pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                                      description: The total amount of local storage required for this EmptyDir volume (for example 1Gi).
                                  description: '`EmptyDir` to use to populate the volume.'
                                persistentVolumeClaim:
                                  type: object
                                  properties:
                                    claimName:
                                      type: string
                                    readOnly:
                                      type: boolean
                                  description: '`PersistentVolumeClaim` object to use to populate the volume.'
                                csi:
                                  type: object
                                  properties:
                                    driver:
                                      type: string
                                    fsType:
                                      type: string
                                    nodePublishSecretRef:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                    readOnly:
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  description: '`CSIVolumeSource` object to use to populate the volume.'
                                image:
                                  type: object
                                  properties:
                                    pullPolicy:
                                      type: string
                                    reference:
                                      type: string
                                  description: '`ImageVolumeSource` object to use to populate the volume.'
                              oneOf:
                              - properties:
                                  secret: {}
                                  configMap: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  csi: {}
                                  image: {}
                            description: Additional volumes that can be mounted to the pod.
                        description: Template for Entity Operator `Pods`.
                      topicOperatorContainer:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secret.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a config map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be applied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should be applied to the container.
                        description: Template for the Entity Topic Operator container.
                      userOperatorContainer:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secret.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a config map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be applied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should be applied to the container.
                        description: Template for the Entity User Operator container.
                      serviceAccount:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for the Entity Operator service account.
                      podDisruptionBudget:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          maxUnavailable:
                            type: integer
                            minimum: 0
                            description: "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1."
                        description: Template for the Entity Operator Pod Disruption Budget.
                      entityOperatorRole:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for the Entity Operator Role.
                      topicOperatorRoleBinding:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for the Entity Topic Operator RoleBinding.
                      userOperatorRoleBinding:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for the Entity Topic Operator RoleBinding.
                    description: Template for Entity Operator resources. The template allows users to specify how a `Deployment` and `Pod` is generated.
                description: Configuration of the Entity Operator.
              clusterCa:
                type: object
                properties:
                  generateCertificateAuthority:
                    type: boolean
                    description: If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.
                  generateSecretOwnerReference:
                    type: boolean
                    description: "If `true`, the Cluster and Client CA Secrets are configured with the `ownerReference` set to the `Kafka` resource. If the `Kafka` resource is deleted when `true`, the CA Secrets are also deleted. If `false`, the `ownerReference` is disabled. If the `Kafka` resource is deleted when `false`, the CA Secrets are retained and available for reuse. Default is `true`."
                  validityDays:
                    type: integer
                    minimum: 1
                    description: The number of days generated certificates should be valid for. The default is 365.
                  renewalDays:
                    type: integer
                    minimum: 1
                    description: "The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30."
                  certificateExpirationPolicy:
                    type: string
                    enum:
                    - renew-certificate
                    - replace-key
                    description: How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.
                description: Configuration of the cluster certificate authority.
              clientsCa:
                type: object
                properties:
                  generateCertificateAuthority:
                    type: boolean
                    description: If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.
                  generateSecretOwnerReference:
                    type: boolean
                    description: "If `true`, the Cluster and Client CA Secrets are configured with the `ownerReference` set to the `Kafka` resource. If the `Kafka` resource is deleted when `true`, the CA Secrets are also deleted. If `false`, the `ownerReference` is disabled. If the `Kafka` resource is deleted when `false`, the CA Secrets are retained and available for reuse. Default is `true`."
                  validityDays:
                    type: integer
                    minimum: 1
                    description: The number of days generated certificates should be valid for. The default is 365.
                  renewalDays:
                    type: integer
                    minimum: 1
                    description: "The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30."
                  certificateExpirationPolicy:
                    type: string
                    enum:
                    - renew-certificate
                    - replace-key
                    description: How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.
                description: Configuration of the clients certificate authority.
              cruiseControl:
                type: object
                properties:
                  image:
                    type: string
                    description: "The container image used for Cruise Control pods. If no image name is explicitly specified, the image name corresponds to the name specified in the Cluster Operator configuration. If an image name is not defined in the Cluster Operator configuration, a default value is used."
                  resources:
                    type: object
                    properties:
                      claims:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            request:
                              type: string
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                    description: CPU and memory resources to reserve for the Cruise Control container.
                  livenessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                    description: Pod liveness checking for the Cruise Control container.
                  readinessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                    description: Pod readiness checking for the Cruise Control container.
                  jvmOptions:
                    type: object
                    properties:
                      "-XX":
                        additionalProperties:
                          type: string
                        type: object
                        description: A map of -XX options to the JVM.
                      "-Xmx":
                        type: string
                        pattern: "^[0-9]+[mMgG]?$"
                        description: -Xmx option to to the JVM.
                      "-Xms":
                        type: string
                        pattern: "^[0-9]+[mMgG]?$"
                        description: -Xms option to to the JVM.
                      gcLoggingEnabled:
                        type: boolean
                        description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                      javaSystemProperties:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The system property name.
                            value:
                              type: string
                              description: The system property value.
                        description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                    description: JVM Options for the Cruise Control container.
                  logging:
                    type: object
                    properties:
                      loggers:
                        additionalProperties:
                          type: string
                        type: object
                        description: A Map from logger name to logger level.
                      type:
                        type: string
                        enum:
                        - inline
                        - external
                        description: "Logging type, must be either 'inline' or 'external'."
                      valueFrom:
                        type: object
                        properties:
                          configMapKeyRef:
                            type: object
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            description: Reference to the key in the ConfigMap containing the configuration.
                        description: '`ConfigMap` entry where the logging configuration is stored. '
                    required:
                    - type
                    description: Logging configuration (Log4j 2) for Cruise Control.
                  template:
                    type: object
                    properties:
                      deployment:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                          deploymentStrategy:
                            type: string
                            enum:
                            - RollingUpdate
                            - Recreate
                            description: Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                        description: Template for Cruise Control `Deployment`.
                      pod:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                          imagePullSecrets:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                            description: "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored."
                          securityContext:
                            type: object
                            properties:
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              fsGroup:
                                type: integer
                              fsGroupChangePolicy:
                                type: string
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxChangePolicy:
                                type: string
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              supplementalGroups:
                                type: array
                                items:
                                  type: integer
                              supplementalGroupsPolicy:
                                type: string
                              sysctls:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Configures pod-level security attributes and common container settings.
                          terminationGracePeriodSeconds:
                            type: integer
                            minimum: 0
                            description: "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds."
                          affinity:
                            type: object
                            properties:
                              nodeAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        preference:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: object
                                    properties:
                                      nodeSelectorTerms:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                              podAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                              podAntiAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                            description: The pod's affinity rules.
                          tolerations:
                            type: array
                            items:
                              type: object
                              properties:
                                effect:
                                  type: string
                                key:
                                  type: string
                                operator:
                                  type: string
                                tolerationSeconds:
                                  type: integer
                                value:
                                  type: string
                            description: The pod's tolerations.
                          topologySpreadConstraints:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                matchLabelKeys:
                                  type: array
                                  items:
                                    type: string
                                maxSkew:
                                  type: integer
                                minDomains:
                                  type: integer
                                nodeAffinityPolicy:
                                  type: string
                                nodeTaintsPolicy:
                                  type: string
                                topologyKey:
                                  type: string
                                whenUnsatisfiable:
                                  type: string
                            description: The pod's topology spread constraints.
                          priorityClassName:
                            type: string
                            description: 'The name of the priority class used to assign priority to the pods. '
                          schedulerName:
                            type: string
                            description: "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used."
                          hostAliases:
                            type: array
                            items:
                              type: object
                              properties:
                                hostnames:
                                  type: array
                                  items:
                                    type: string
                                ip:
                                  type: string
                            description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          dnsPolicy:
                            type: string
                            enum:
                            - ClusterFirst
                            - ClusterFirstWithHostNet
                            - Default
                            - None
                            description: "The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`."
                          dnsConfig:
                            type: object
                            properties:
                              nameservers:
                                type: array
                                items:
                                  type: string
                              options:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              searches:
                                type: array
                                items:
                                  type: string
                            description: "The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy."
                          enableServiceLinks:
                            type: boolean
                            description: Indicates whether information about services should be injected into Pod's environment variables.
                          tmpDirSizeLimit:
                            type: string
                            pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                            description: "Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources."
                          volumes:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Name to use for the volume. Required.
                                secret:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    optional:
                                      type: boolean
                                    secretName:
                                      type: string
                                  description: '`Secret` to use to populate the volume.'
                                configMap:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  description: '`ConfigMap` to use to populate the volume.'
                                emptyDir:
                                  type: object
                                  properties:
                                    medium:
                                      type: string
                                      enum:
                                      - Memory
                                      description: Medium represents the type of storage medium should back this volume. Valid values are unset or `Memory`.
                                    sizeLimit:
                                      type: string
                                      pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                                      description: The total amount of local storage required for this EmptyDir volume (for example 1Gi).
                                  description: '`EmptyDir` to use to populate the volume.'
                                persistentVolumeClaim:
                                  type: object
                                  properties:
                                    claimName:
                                      type: string
                                    readOnly:
                                      type: boolean
                                  description: '`PersistentVolumeClaim` object to use to populate the volume.'
                                csi:
                                  type: object
                                  properties:
                                    driver:
                                      type: string
                                    fsType:
                                      type: string
                                    nodePublishSecretRef:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                    readOnly:
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  description: '`CSIVolumeSource` object to use to populate the volume.'
                                image:
                                  type: object
                                  properties:
                                    pullPolicy:
                                      type: string
                                    reference:
                                      type: string
                                  description: '`ImageVolumeSource` object to use to populate the volume.'
                              oneOf:
                              - properties:
                                  secret: {}
                                  configMap: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  csi: {}
                                  image: {}
                            description: Additional volumes that can be mounted to the pod.
                        description: Template for Cruise Control `Pods`.
                      apiService:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                          ipFamilyPolicy:
                            type: string
                            enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                            description: "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type."
                          ipFamilies:
                            type: array
                            items:
                              type: string
                              enum:
                              - IPv4
                              - IPv6
                            description: "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting."
                        description: Template for Cruise Control API `Service`.
                      podDisruptionBudget:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          maxUnavailable:
                            type: integer
                            minimum: 0
                            description: "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1."
                        description: Template for Cruise Control `PodDisruptionBudget`.
                      cruiseControlContainer:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secret.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a config map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be applied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should be applied to the container.
                        description: Template for the Cruise Control container.
                      serviceAccount:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for the Cruise Control service account.
                    description: "Template to specify how Cruise Control resources, `Deployments` and `Pods`, are generated."
                  brokerCapacity:
                    type: object
                    properties:
                      cpu:
                        type: string
                        pattern: "^[0-9]+([.][0-9]{0,3}|[m]?)$"
                        description: "Broker capacity for CPU resource in cores or millicores. For example, 1, 1.500, 1500m. For more information on valid CPU resource units see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu."
                      inboundNetwork:
                        type: string
                        pattern: "^[0-9]+([KMG]i?)?B/s$"
                        description: "Broker capacity for inbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s."
                      outboundNetwork:
                        type: string
                        pattern: "^[0-9]+([KMG]i?)?B/s$"
                        description: "Broker capacity for outbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s."
                      overrides:
                        type: array
                        items:
                          type: object
                          properties:
                            brokers:
                              type: array
                              items:
                                type: integer
                              description: List of Kafka brokers (broker identifiers).
                            cpu:
                              type: string
                              pattern: "^[0-9]+([.][0-9]{0,3}|[m]?)$"
                              description: "Broker capacity for CPU resource in cores or millicores. For example, 1, 1.500, 1500m. For more information on valid CPU resource units see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu."
                            inboundNetwork:
                              type: string
                              pattern: "^[0-9]+([KMG]i?)?B/s$"
                              description: "Broker capacity for inbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s."
                            outboundNetwork:
                              type: string
                              pattern: "^[0-9]+([KMG]i?)?B/s$"
                              description: "Broker capacity for outbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s."
                          required:
                          - brokers
                        description: Overrides for individual brokers. The `overrides` property lets you specify a different capacity configuration for different brokers.
                    description: The Cruise Control `brokerCapacity` configuration.
                  config:
                    x-kubernetes-preserve-unknown-fields: true
                    type: object
                    description: "The Cruise Control configuration. For a full list of configuration options refer to https://github.com/linkedin/cruise-control/wiki/Configurations. Note that properties with the following prefixes cannot be set: bootstrap.servers, client.id, zookeeper., network., security., failed.brokers.zk.path,webserver.http., webserver.api.urlprefix, webserver.session.path, webserver.accesslog., two.step., request.reason.required,metric.reporter.sampler.bootstrap.servers, capacity.config.file, self.healing., ssl., kafka.broker.failure.detection.enable, topic.config.provider.class (with the exception of: ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, webserver.http.cors.enabled, webserver.http.cors.origin, webserver.http.cors.exposeheaders, webserver.security.enable, webserver.ssl.enable)."
                  metricsConfig:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                        - jmxPrometheusExporter
                        - strimziMetricsReporter
                        description: Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.
                      valueFrom:
                        type: object
                        properties:
                          configMapKeyRef:
                            type: object
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            description: Reference to the key in the ConfigMap containing the configuration.
                        description: ConfigMap entry where the Prometheus JMX Exporter configuration is stored.
                      values:
                        type: object
                        properties:
                          allowList:
                            type: array
                            items:
                              type: string
                            description: A list of regex patterns to filter the metrics to collect. Should contain at least one element.
                        description: Configuration values for the Strimzi Metrics Reporter.
                    required:
                    - type
                    description: "Metrics configuration. Only `jmxPrometheusExporter` can be configured, as this component does not support `strimziMetricsReporter`."
                    x-kubernetes-validations:
                    - rule: self.type != 'jmxPrometheusExporter' || has(self.valueFrom)
                      message: valueFrom property is required
                    - rule: self.type != 'strimziMetricsReporter'
                      message: value type not supported
                  apiUsers:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                        - hashLoginService
                        description: "Type of the Cruise Control API users configuration. Supported format is: `hashLoginService`."
                      valueFrom:
                        type: object
                        properties:
                          secretKeyRef:
                            type: object
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            description: Selects a key of a Secret in the resource's namespace.
                        description: Secret from which the custom Cruise Control API authentication credentials are read.
                    required:
                    - type
                    - valueFrom
                    description: Configuration of the Cruise Control REST API users.
                  autoRebalance:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        mode:
                          type: string
                          enum:
                          - add-brokers
                          - remove-brokers
                          description: "Specifies the mode for automatically rebalancing when brokers are added or removed. Supported modes are `add-brokers` and `remove-brokers`. \n"
                        template:
                          type: object
                          properties:
                            name:
                              type: string
                          description: Reference to the KafkaRebalance custom resource to be used as the configuration template for the auto-rebalancing on scaling when running for the corresponding mode.
                      required:
                      - mode
                    description: "Auto-rebalancing on scaling related configuration listing the modes, when brokers are added or removed, with the corresponding rebalance template configurations.If this field is set, at least one mode has to be defined."
                description: Configuration for Cruise Control deployment. Deploys a Cruise Control instance when specified.
              kafkaExporter:
                type: object
                properties:
                  image:
                    type: string
                    description: "The container image used for the Kafka Exporter pods. If no image name is explicitly specified, the image name corresponds to the version specified in the Cluster Operator configuration. If an image name is not defined in the Cluster Operator configuration, a default value is used."
                  groupRegex:
                    type: string
                    description: Regular expression to specify which consumer groups to collect. Default value is `.*`.
                  topicRegex:
                    type: string
                    description: Regular expression to specify which topics to collect. Default value is `.*`.
                  groupExcludeRegex:
                    type: string
                    description: Regular expression to specify which consumer groups to exclude.
                  topicExcludeRegex:
                    type: string
                    description: Regular expression to specify which topics to exclude.
                  resources:
                    type: object
                    properties:
                      claims:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            request:
                              type: string
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                    description: CPU and memory resources to reserve.
                  logging:
                    type: string
                    description: "Only log messages with the given severity or above. Valid levels: [`info`, `debug`, `trace`]. Default log level is `info`."
                  livenessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                    description: Pod liveness check.
                  readinessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                    description: Pod readiness check.
                  enableSaramaLogging:
                    type: boolean
                    description: "Enable Sarama logging, a Go client library used by the Kafka Exporter."
                  showAllOffsets:
                    type: boolean
                    description: "Whether show the offset/lag for all consumer group, otherwise, only show connected consumer groups."
                  template:
                    type: object
                    properties:
                      deployment:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                          deploymentStrategy:
                            type: string
                            enum:
                            - RollingUpdate
                            - Recreate
                            description: Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                        description: Template for Kafka Exporter `Deployment`.
                      pod:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                          imagePullSecrets:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                            description: "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored."
                          securityContext:
                            type: object
                            properties:
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              fsGroup:
                                type: integer
                              fsGroupChangePolicy:
                                type: string
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxChangePolicy:
                                type: string
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              supplementalGroups:
                                type: array
                                items:
                                  type: integer
                              supplementalGroupsPolicy:
                                type: string
                              sysctls:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Configures pod-level security attributes and common container settings.
                          terminationGracePeriodSeconds:
                            type: integer
                            minimum: 0
                            description: "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds."
                          affinity:
                            type: object
                            properties:
                              nodeAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        preference:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: object
                                    properties:
                                      nodeSelectorTerms:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                              podAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                              podAntiAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                            description: The pod's affinity rules.
                          tolerations:
                            type: array
                            items:
                              type: object
                              properties:
                                effect:
                                  type: string
                                key:
                                  type: string
                                operator:
                                  type: string
                                tolerationSeconds:
                                  type: integer
                                value:
                                  type: string
                            description: The pod's tolerations.
                          topologySpreadConstraints:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                matchLabelKeys:
                                  type: array
                                  items:
                                    type: string
                                maxSkew:
                                  type: integer
                                minDomains:
                                  type: integer
                                nodeAffinityPolicy:
                                  type: string
                                nodeTaintsPolicy:
                                  type: string
                                topologyKey:
                                  type: string
                                whenUnsatisfiable:
                                  type: string
                            description: The pod's topology spread constraints.
                          priorityClassName:
                            type: string
                            description: 'The name of the priority class used to assign priority to the pods. '
                          schedulerName:
                            type: string
                            description: "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used."
                          hostAliases:
                            type: array
                            items:
                              type: object
                              properties:
                                hostnames:
                                  type: array
                                  items:
                                    type: string
                                ip:
                                  type: string
                            description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          dnsPolicy:
                            type: string
                            enum:
                            - ClusterFirst
                            - ClusterFirstWithHostNet
                            - Default
                            - None
                            description: "The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`."
                          dnsConfig:
                            type: object
                            properties:
                              nameservers:
                                type: array
                                items:
                                  type: string
                              options:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              searches:
                                type: array
                                items:
                                  type: string
                            description: "The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy."
                          enableServiceLinks:
                            type: boolean
                            description: Indicates whether information about services should be injected into Pod's environment variables.
                          tmpDirSizeLimit:
                            type: string
                            pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                            description: "Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources."
                          volumes:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Name to use for the volume. Required.
                                secret:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    optional:
                                      type: boolean
                                    secretName:
                                      type: string
                                  description: '`Secret` to use to populate the volume.'
                                configMap:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  description: '`ConfigMap` to use to populate the volume.'
                                emptyDir:
                                  type: object
                                  properties:
                                    medium:
                                      type: string
                                      enum:
                                      - Memory
                                      description: Medium represents the type of storage medium should back this volume. Valid values are unset or `Memory`.
                                    sizeLimit:
                                      type: string
                                      pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                                      description: The total amount of local storage required for this EmptyDir volume (for example 1Gi).
                                  description: '`EmptyDir` to use to populate the volume.'
                                persistentVolumeClaim:
                                  type: object
                                  properties:
                                    claimName:
                                      type: string
                                    readOnly:
                                      type: boolean
                                  description: '`PersistentVolumeClaim` object to use to populate the volume.'
                                csi:
                                  type: object
                                  properties:
                                    driver:
                                      type: string
                                    fsType:
                                      type: string
                                    nodePublishSecretRef:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                    readOnly:
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  description: '`CSIVolumeSource` object to use to populate the volume.'
                                image:
                                  type: object
                                  properties:
                                    pullPolicy:
                                      type: string
                                    reference:
                                      type: string
                                  description: '`ImageVolumeSource` object to use to populate the volume.'
                              oneOf:
                              - properties:
                                  secret: {}
                                  configMap: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  csi: {}
                                  image: {}
                            description: Additional volumes that can be mounted to the pod.
                        description: Template for Kafka Exporter `Pods`.
                      container:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secret.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a config map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be applied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should be applied to the container.
                        description: Template for the Kafka Exporter container.
                      serviceAccount:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata applied to the resource.
                        description: Template for the Kafka Exporter service account.
                      podDisruptionBudget:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes resource.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes resource.
                            description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          maxUnavailable:
                            type: integer
                            minimum: 0
                            description: "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1."
                        description: Template for the Pod Disruption Budget for Kafka Exporter pods.
                    description: Customization of deployment templates and pods.
                description: "Configuration of the Kafka Exporter. Kafka Exporter can provide additional metrics, for example lag of consumer group at topic/partition."
              maintenanceTimeWindows:
                type: array
                items:
                  type: string
                description: "A list of time windows for maintenance tasks (that is, certificates renewal). Each time window is defined by a cron expression."
            required:
            - kafka
            description: The specification of the Kafka cluster.
          status:
            type: object
            properties:
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: "The unique identifier of a condition, used to distinguish between other conditions in the resource."
                    status:
                      type: string
                      description: "The status of the condition, either True, False or Unknown."
                    lastTransitionTime:
                      type: string
                      description: "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone."
                    reason:
                      type: string
                      description: The reason for the condition's last transition (a single word in CamelCase).
                    message:
                      type: string
                      description: Human-readable message indicating details about the condition's last transition.
                description: List of status conditions.
              observedGeneration:
                type: integer
                description: The generation of the CRD that was last reconciled by the operator.
              listeners:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the listener.
                    addresses:
                      type: array
                      items:
                        type: object
                        properties:
                          host:
                            type: string
                            description: The DNS name or IP address of the Kafka bootstrap service.
                          port:
                            type: integer
                            description: The port of the Kafka bootstrap service.
                      description: A list of the addresses for this listener.
                    bootstrapServers:
                      type: string
                      description: A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.
                    certificates:
                      type: array
                      items:
                        type: string
                      description: A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.
                description: Addresses of the internal and external listeners.
              kafkaNodePools:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the KafkaNodePool used by this Kafka resource.
                description: List of the KafkaNodePools used by this Kafka cluster.
              clusterId:
                type: string
                description: Kafka cluster Id.
              operatorLastSuccessfulVersion:
                type: string
                description: The version of the Strimzi Cluster Operator which performed the last successful reconciliation.
              kafkaVersion:
                type: string
                description: The version of Kafka currently deployed in the cluster.
              kafkaMetadataVersion:
                type: string
                description: The KRaft metadata.version currently used by the Kafka cluster.
              autoRebalance:
                type: object
                properties:
                  state:
                    type: string
                    enum:
                    - Idle
                    - RebalanceOnScaleDown
                    - RebalanceOnScaleUp
                    description: "The current state of an auto-rebalancing operation. Possible values are: \n\n* `Idle` as the initial state when an auto-rebalancing is requested or as final state when it completes or fails.\n* `RebalanceOnScaleDown` if an auto-rebalance related to a scale-down operation is running.\n* `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is running."
                  lastTransitionTime:
                    type: string
                    description: The timestamp of the latest auto-rebalancing state update.
                  modes:
                    type: array
                    items:
                      type: object
                      properties:
                        mode:
                          type: string
                          enum:
                          - add-brokers
                          - remove-brokers
                          description: "Mode for which there is an auto-rebalancing operation in progress or queued, when brokers are added or removed. The possible modes are `add-brokers` and `remove-brokers`."
                        brokers:
                          type: array
                          items:
                            type: integer
                          description: "List of broker IDs involved in an auto-rebalancing operation related to the current mode. \nThe list contains one of the following: \n\n* Broker IDs for a current auto-rebalance. \n* Broker IDs for a queued auto-rebalance (if a previous auto-rebalance is still in progress). \n"
                    description: "List of modes where an auto-rebalancing operation is either running or queued. \nEach mode entry (`add-brokers` or `remove-brokers`) includes one of the following: \n\n* Broker IDs for a current auto-rebalance. \n* Broker IDs for a queued auto-rebalance (if a previous rebalance is still in progress)."
                description: The status of an auto-rebalancing triggered by a cluster scaling request.
            description: The status of the Kafka cluster.
        required:
        - spec
