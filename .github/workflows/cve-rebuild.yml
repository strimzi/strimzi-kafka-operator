name: CVE Container Rebuild

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release Version (e.g., 0.49.0)'
        required: true
        type: string
      releaseSuffix:
        description: 'Release Suffix (e.g., 2 for 0.49.0-2)'
        required: true
        type: string
      sourceBuildRunId:
        description: 'GitHub Actions Run ID of the source build (find in Actions tab URL)'
        required: true
        type: string

jobs:
  # Rebuild containers using artifacts from a previous build
  build-containers:
    name: Build Containers
    # Only run on release branches
    if: ${{ startsWith(github.ref, 'refs/heads/release-') }}
    strategy:
      matrix:
        architecture:
          - amd64
          - arm64
          - s390x
          - ppc64le
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      # Download artifacts from the specified source build
      - name: Download build artifacts from source build
        uses: actions/download-artifact@v4
        with:
          name: strimzi-binaries.tar
          run-id: ${{ inputs.sourceBuildRunId }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./.github/actions/build/containers-build
        with:
          architecture: ${{ matrix.architecture }}
          runnerArch: "amd64"

  # Push containers with suffix (e.g., 0.49.0-1)
  push-containers-with-suffix:
    name: Push Containers (${{ inputs.releaseVersion }}-${{ inputs.releaseSuffix }})
    needs:
      - build-containers
    if: ${{ startsWith(github.ref, 'refs/heads/release-') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      DOCKER_REGISTRY: "quay.io"
      DOCKER_ORG: "strimzi"
      DOCKER_TAG: "${{ inputs.releaseVersion }}-${{ inputs.releaseSuffix }}"
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/build/containers-push
        with:
          architectures: "amd64,arm64,ppc64le,s390x"
          runnerArch: "amd64"
          quayUser: ${{ secrets.QUAY_USER }}
          quayPass: ${{ secrets.QUAY_PASS }}

  # Manual validation step - waits for approval before pushing without suffix
  manual-validation:
    name: Wait for Manual Validation
    needs:
      - push-containers-with-suffix
    if: ${{ startsWith(github.ref, 'refs/heads/release-') }}
    runs-on: ubuntu-latest
    environment:
      name: cve-validation
    steps:
      - name: Wait for validation
        run: |
          echo "Container image ${{ inputs.releaseVersion }}-${{ inputs.releaseSuffix }} has been pushed."
          echo "Please validate the container image before approving this step."
          echo "Once approved, the image will be pushed with tag ${{ inputs.releaseVersion }}"

  # Push containers without suffix (e.g., 0.49.0) after validation
  push-containers:
    name: Push Containers (${{ inputs.releaseVersion }})
    needs:
      - manual-validation
    if: ${{ startsWith(github.ref, 'refs/heads/release-') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      DOCKER_REGISTRY: "quay.io"
      DOCKER_ORG: "strimzi"
      DOCKER_TAG: "${{ inputs.releaseVersion }}"
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/build/containers-push
        with:
          architectures: "amd64,arm64,ppc64le,s390x"
          runnerArch: "amd64"
          quayUser: ${{ secrets.QUAY_USER }}
          quayPass: ${{ secrets.QUAY_PASS }}