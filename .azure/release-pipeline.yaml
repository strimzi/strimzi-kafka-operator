# Triggers
trigger: none
pr: none

# Parameters
parameters:
  - name: releaseVersion
    displayName: Release Version
    type: string
  - name: useSuffix
    displayName: Build suffixed images
    type: boolean
    default: true
  - name: releaseSuffix
    displayName: Release Suffix
    type: number
  - name: sourcePipelineId
    displayName: Pipeline ID of the source build
    type: number
    # 16 is the pipeline ID of the Operators build pipeline which provides the artifacts in Azure
    default: 16
    values:
      - 16
  - name: sourceBuildId
    displayName: Build ID of the source build
    type: number

# Stages
stages:
  - stage: prepare_release_artifacts
    displayName: Prepare release artifacts for ${{ parameters.releaseVersion }}
    condition: startsWith(variables['build.sourceBranch'], 'refs/heads/release-')
    jobs:
      - template: 'templates/jobs/build/release_artifacts.yaml'
        parameters:
          releaseVersion: '${{ parameters.releaseVersion }}'
  - stage: containers_publish_with_suffix
    displayName: Publish Containers for ${{ parameters.releaseVersion }}-${{ parameters.releaseSuffix }}
    dependsOn:
      - prepare_release_artifacts
    condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/heads/release-'), eq('${{ parameters.useSuffix }}', 'true'))
    jobs:
      - template: 'templates/jobs/build/push_containers.yaml'
        parameters:
          dockerTag: '${{ parameters.releaseVersion }}-${{ parameters.releaseSuffix }}'
          artifactSource: 'specific'
          artifactProject: 'strimzi'
          artifactPipeline: '${{ parameters.sourcePipelineId }}'
          artifactRunVersion: 'specific'
          artifactRunId: '${{ parameters.sourceBuildId }}'
          architectures: ['amd64', 'arm64', 's390x', 'ppc64le']
  - stage: containers_publish
    displayName: Publish Containers for ${{ parameters.releaseVersion }}
    dependsOn:
      - containers_publish_with_suffix
    condition: and(in(dependencies.containers_publish_with_suffix.result, 'Succeeded', 'SucceededWithIssues', 'Skipped'), startsWith(variables['build.sourceBranch'], 'refs/heads/release-'))
    jobs:
      - template: 'templates/jobs/build/push_containers.yaml'
        parameters:
          dockerTag: '${{ parameters.releaseVersion }}'
          artifactSource: 'specific'
          artifactProject: 'strimzi'
          artifactPipeline: '${{ parameters.sourcePipelineId }}'
          artifactRunVersion: 'specific'
          artifactRunId: '${{ parameters.sourceBuildId }}'
          architectures: ['amd64', 'arm64', 's390x', 'ppc64le']
  # Publishes the Strimzi Helm Chart as an OCI artifact to Quay.io
  - stage: helm_as_oci_publish
    displayName: Publish Helm Chart as OCI artifact
    dependsOn:
      - containers_publish
    condition: and(in(dependencies.containers_publish.result, 'Succeeded', 'SucceededWithIssues'), startsWith(variables['build.sourceBranch'], 'refs/heads/release-'))
    jobs:
      - template: 'templates/jobs/build/publish_helm_chart_as_oci.yaml'
        parameters:
          releaseVersion: '${{ parameters.releaseVersion }}'
          artifactSource: 'current'
          artifactProject: 'strimzi'
          artifactPipeline: ''
          artifactRunVersion: ''
          artifactRunId: ''
